/*************************** Sophos.com/RapidResponse ***************************\
| REQUIRES SOPHOS JOURNALS                                                       |
|                                                                                |
| DESCRIPTION                                                                    |
| Uses the Sophos_winsec_journal which is informationed recorded from the        |
| security event log.                                                            |
|                                                                                |
| VARIABLES                                                                      |
| username(username) = username to search for                                    |
| source_ip(IP address) = source IP user is logging in from                      |
| begin(date) = datetime of when to start hunting                                |
| end(date) = datetime of when to stop hunting                                   |
|                                                                                |
| TIP                                                                            |
| Use wildcards for username/source_ip if you want to bring all users back.      |
|                                                                                |
| Version: 1.1                                                                   |
| Author: Sophos / @AltShiftPrtScn                                               |
| github.com/SophosRapidResponse                                                 |
\********************************************************************************/

SELECT 
    strftime('%Y-%m-%dT%H:%M:%SZ', datetime(time,'unixepoch')) AS DateTime,
    CAST(json_extract(data, '$.authenticationPackageName') AS TEXT) Auth_Package_Name,
    CAST(json_extract(data, '$.targetDomainName') AS TEXT) Domain,
    CAST(json_extract(data, '$.targetUserName') AS TEXT) Username,
    CAST(json_extract(data, '$.ipAddress') AS TEXT) Remote_Address,
    CAST(CASE json_extract(data, '$.logonType')
        WHEN 2 THEN 'Logon Type 2 - Interactive'
        WHEN 3 THEN 'Logon Type 3 - Network'
        WHEN 4 THEN 'Logon Type 4 - Batch'
        WHEN 5 THEN 'Logon Type 5 - Service'
        WHEN 6 THEN 'Logon Type 6 - Proxy'
        WHEN 7 THEN 'Logon Type 7 - Unlock'
        WHEN 8 THEN 'Logon Type 8 - NetworkCleartext'
        WHEN 9 THEN 'Logon Type 9 - NewCredentials'
        WHEN 10 THEN 'Logon Type 10 - RemoteInteractive'
        WHEN 11 THEN 'Logon Type 11 - CachedInteractive'
        WHEN 12 THEN 'Logon Type 12 - Cached Remote Interactive'
        ELSE 'UNKNOWN TYPE: ' || json_extract(data,'$.EventData.LogonType')
    END AS TEXT) Logon_Type,
	eventType AS Event_ID,
    CAST(CASE eventType
        WHEN 4624 THEN 'Authenticated'
        ELSE CASE json_extract(data, '$.subStatus')
            WHEN '0xc000005e' THEN 'There are currently no logon servers available to service the logon request'
            WHEN '0xc0000064' THEN 'Incorrect User - User logon with misspelled or bad user account'
            WHEN '0xc000006a' THEN 'Incorrect Password - User logon with misspelled or bad password'
            WHEN '0xc000006d' THEN 'Incorrect User or Auth - This is either due to a bad username or authentication information'
            WHEN '0xc000006f' THEN 'User logon outside authorized hours'
            WHEN '0xc0000070' THEN 'User logon from unauthorized workstation'
            WHEN '0xc0000072' THEN 'Disabled - User logon to account disabled by administrator'
            WHEN '0xc000015b' THEN 'The user has not been granted the requested logon type (aka logon right) at this machine'
            WHEN '0xc0000192' THEN 'An attempt was made to logon, but the Netlogon service was not started'
            WHEN '0xc0000193' THEN 'Expired - User logon with expired account'
            WHEN '0xc0000413' THEN 'Logon Failure: The machine you are logging onto is protected by an authentication firewall. The specified account is not allowed to authenticate to the machine'
            ELSE 'UNKNOWN: ' || json_extract(data, '$.subStatus')
        END
    END AS TEXT) Result,
	'Winsec Journal' AS Data_Source,
	'Logins.02.0' AS Query
FROM sophos_winsec_journal
    WHERE eventType IN (4624, 4625)
    AND IFNULL(json_extract(data, '$.ipAddress'), '') LIKE '$$source_ip$$'
    AND IFNULL(json_extract(data, '$.targetUserName'), '') LIKE '$$username$$'
    AND time >= $$begin$$
    AND time <= $$end$$